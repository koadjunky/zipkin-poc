version: '3.7'
services:

  rabbit:
    image: rabbitmq:3.9-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - jaeger-example

  cassandra:
    image: cassandra:latest
    container_name: cassandra
    ports:
      - "7000:7000" # cluster communication
      - "7199:7199" # JMX
      - "9042:9042" # native protocol clients
    networks:
      - jaeger-example
    volumes:
      - cassandra-volume:/var/lib/cassandra

  cassandra-schema:
    image: jaegertracing/jaeger-cassandra-schema
    depends_on:
      - cassandra
    networks:
      - jaeger-example

  jaeger:
    image: jaegertracing/all-in-one:latest
    command:
      - "--cassandra.keyspace=jaeger_v1_dc1"
    ports:
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
      - "16686:16686" # UI
      - "14268:14268" # jaeger.thrift
      - "14250:14250" # model.proto
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - JAEGER_DISABLED=true # disable jaeger-query traces
      - LOG_LEVEL=debug
      - SPAN_STORAGE_TYPE=cassandra
      - CASSANDRA_SERVERS=cassandra
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:7300
    networks:
      - jaeger-example
    restart: on-failure
    depends_on:
      - cassandra-schema

  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - jaeger-example

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "7300:7300"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.listen-address=:7300
    networks:
      - jaeger-example

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./grafana/dashboard-for-grafana.json:/var/lib/grafana/dashboards/dashboard-for-grafana.json
      - ./grafana/dashboard-for-jaeger.json:/var/lib/grafana/dashboards/dashboard-for-jaeger.json
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    networks:
      - jaeger-example

  hotrod:
    image: jaegertracing/example-hotrod:latest
    # To run the latest trunk build, find the tag at Docker Hub and use the line below
    # https://hub.docker.com/r/jaegertracing/example-hotrod-snapshot/tags
    #image: jaegertracing/example-hotrod-snapshot:0ab8f2fcb12ff0d10830c1ee3bb52b745522db6c
    ports:
      - "8080:8080"
    command: ["all"]
    environment:
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    networks:
      - jaeger-example
    depends_on:
      - jaeger

networks:
  jaeger-example:

volumes:
  cassandra-volume:
